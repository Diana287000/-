#include <iostream>
using namespace std;

string reverseString(string s)
{
    if (s == "") return s;
    else return s.back() + reverseString(s.substr(0, s.length() - 1));
}


struct ListNode {
    int value;
    ListNode* next;
    ListNode(int x) : value(x), next(nullptr) {}
};

struct List {
    ListNode* first;
    ListNode* last;

    List() : first(nullptr), last(nullptr) {}

    bool isEmpty() {
        return first == nullptr;
    }

    void pushBack(int _value) {
        ListNode* node = new ListNode(_value);
        if (isEmpty()) {
            first = node;
            last = node;
            return;
        }
        last->next = node;
        last = node;
    }

    void print() {
        if (isEmpty()) return;
        ListNode* node = first;
        while (node) {
            std::cout << node->value << " ";
            node = node->next;
        }
        std::cout << std::endl;
    }

    void swapPairsRecursive(ListNode* current) {
        if (current == nullptr || current->next == nullptr) {
            return;
        }
        std::swap(current->value, current->next->value);

        swapPairsRecursive(current->next->next);
    }

    void swapPairs() {
        swapPairsRecursive(first);
    }
};


int fibonacci(int n)
{
    if (n == 0) return 0;
    if (n == 1) return 1;
    if (n > 1) return fibonacci(n - 1) + fibonacci(n - 2);
}

int stairs(int n) {
    if (n == 1 || n == 2) {
        return n;
    }

    return stairs(n - 1) + stairs(n - 2);
}

int pow(int n, int p) {
    if (p == 0) return 0;
    if (p == 1) return n;
    if (p > 1) return n * pow(n, p - 1);
}



int main()
{
    setlocale(LC_ALL, "ukr");

    //Завдання перше
    string s = "tiger";
    cout << s << ", " << reverseString(s);

    //Завдання друге
    List myList;

    myList.pushBack(1);
    myList.pushBack(2);
    myList.pushBack(3);
    myList.pushBack(4);

    std::cout << "\nОригiнальний список: ";
    myList.print();

    myList.swapPairs();

    cout << "Пiсля обмiну: ";
    myList.print();


    //Завдання третє
    cout << "F(4) = " << fibonacci(4);

    //Завдання четверте
    cout << "\nСходiв 5, варiацiй " << stairs(5);

    //Завдання п'яте
    cout << "\n3^4 = " << pow(3, 4);
    
}
